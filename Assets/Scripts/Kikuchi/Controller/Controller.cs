//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Other/Controller/Controller.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controller: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controller()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controller"",
    ""maps"": [
        {
            ""name"": ""Buttons"",
            ""id"": ""c504d827-85af-419b-b964-15a5dffb75d4"",
            ""actions"": [
                {
                    ""name"": ""North"",
                    ""type"": ""Button"",
                    ""id"": ""a0a9c5cf-10f6-4829-b32e-ec4d1bf7524c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""West"",
                    ""type"": ""Button"",
                    ""id"": ""f30ab7eb-c4da-4561-95d4-bb1e9434dc5d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""East"",
                    ""type"": ""Button"",
                    ""id"": ""c7e7d83e-c02e-42a2-8dac-cc14e3d5d217"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""South"",
                    ""type"": ""Button"",
                    ""id"": ""bbbec7d6-f51d-4315-951e-80c4e485f47c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""R1"",
                    ""type"": ""Button"",
                    ""id"": ""fca7e454-b629-478e-a820-a0a4c84af2a2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""R2"",
                    ""type"": ""Button"",
                    ""id"": ""8ced9587-c218-499d-8e52-cde6e30c6ab6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""L1"",
                    ""type"": ""Button"",
                    ""id"": ""78a42852-a9d6-47dd-bbda-cbfed5983a33"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""L2"",
                    ""type"": ""Button"",
                    ""id"": ""e2516ade-0e07-409b-9283-72c7e3560ed5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Option"",
                    ""type"": ""Button"",
                    ""id"": ""1fd84e08-7f10-47d0-8328-42b0d3328b7c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""49f70cf0-c9c3-4169-a208-b2ca9662e9d0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Up"",
                    ""type"": ""Button"",
                    ""id"": ""77a8c337-06da-4f0e-aa6e-3646376a1c66"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Down"",
                    ""type"": ""Button"",
                    ""id"": ""71954514-72a9-441b-9fba-cae1a0aa9c7d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left"",
                    ""type"": ""Button"",
                    ""id"": ""3faa39d8-0a9a-4165-b485-4fde7a1cd0cf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right"",
                    ""type"": ""Button"",
                    ""id"": ""ec5fff04-b831-4c6c-b86e-390bfe2f0f05"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d835e631-4508-45a0-ac60-4186e44554c1"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""North"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""14ef85f2-f7c3-44d1-a635-f8f1e1c50ebb"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""West"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e7bc85d-bdf8-4acb-8b96-88b9598c6165"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""East"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7b273fca-9daa-4a43-ba90-6d37ce1ea4d3"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""South"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""63bfae66-8dfb-4f68-ad30-16610f51efb9"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""R1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3bf526cb-7b6e-46d3-8413-19fdb0b8fdb5"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""R2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""402a0df5-5bd9-4f07-b412-acaecd4955f9"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""L1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89609bff-da01-483c-ad84-85ae2465a85f"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""L2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ae5eda6f-5f38-4cea-aae3-5c8c1e7f4dfa"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Option"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""858950cf-6510-4fae-a830-d5a490c26ead"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34baaed0-62a5-4b94-ac03-4a89fe24b2e4"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f357264b-4665-4c57-9c3c-70867f6b6e30"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dbe3fcc9-e176-4a9e-b0db-d3d5a6d280a3"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b3ed4a4-136a-4c9f-a3a8-73d6f74dfeec"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Sticks"",
            ""id"": ""7c33b634-1343-4cae-af6d-6ae8a0a77203"",
            ""actions"": [
                {
                    ""name"": ""LStick"",
                    ""type"": ""Value"",
                    ""id"": ""dcb1b43a-7239-4931-8f51-b5453f68baef"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RStick"",
                    ""type"": ""Value"",
                    ""id"": ""c2e5150f-c615-4c50-b010-df979a3f6f29"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c8b4d7c8-8d1f-4d3f-9753-1b55ad69b561"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5fb37914-feb3-4689-88a8-d9d83388e340"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Buttons
        m_Buttons = asset.FindActionMap("Buttons", throwIfNotFound: true);
        m_Buttons_North = m_Buttons.FindAction("North", throwIfNotFound: true);
        m_Buttons_West = m_Buttons.FindAction("West", throwIfNotFound: true);
        m_Buttons_East = m_Buttons.FindAction("East", throwIfNotFound: true);
        m_Buttons_South = m_Buttons.FindAction("South", throwIfNotFound: true);
        m_Buttons_R1 = m_Buttons.FindAction("R1", throwIfNotFound: true);
        m_Buttons_R2 = m_Buttons.FindAction("R2", throwIfNotFound: true);
        m_Buttons_L1 = m_Buttons.FindAction("L1", throwIfNotFound: true);
        m_Buttons_L2 = m_Buttons.FindAction("L2", throwIfNotFound: true);
        m_Buttons_Option = m_Buttons.FindAction("Option", throwIfNotFound: true);
        m_Buttons_Select = m_Buttons.FindAction("Select", throwIfNotFound: true);
        m_Buttons_Up = m_Buttons.FindAction("Up", throwIfNotFound: true);
        m_Buttons_Down = m_Buttons.FindAction("Down", throwIfNotFound: true);
        m_Buttons_Left = m_Buttons.FindAction("Left", throwIfNotFound: true);
        m_Buttons_Right = m_Buttons.FindAction("Right", throwIfNotFound: true);
        // Sticks
        m_Sticks = asset.FindActionMap("Sticks", throwIfNotFound: true);
        m_Sticks_LStick = m_Sticks.FindAction("LStick", throwIfNotFound: true);
        m_Sticks_RStick = m_Sticks.FindAction("RStick", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Buttons
    private readonly InputActionMap m_Buttons;
    private List<IButtonsActions> m_ButtonsActionsCallbackInterfaces = new List<IButtonsActions>();
    private readonly InputAction m_Buttons_North;
    private readonly InputAction m_Buttons_West;
    private readonly InputAction m_Buttons_East;
    private readonly InputAction m_Buttons_South;
    private readonly InputAction m_Buttons_R1;
    private readonly InputAction m_Buttons_R2;
    private readonly InputAction m_Buttons_L1;
    private readonly InputAction m_Buttons_L2;
    private readonly InputAction m_Buttons_Option;
    private readonly InputAction m_Buttons_Select;
    private readonly InputAction m_Buttons_Up;
    private readonly InputAction m_Buttons_Down;
    private readonly InputAction m_Buttons_Left;
    private readonly InputAction m_Buttons_Right;
    public struct ButtonsActions
    {
        private @Controller m_Wrapper;
        public ButtonsActions(@Controller wrapper) { m_Wrapper = wrapper; }
        public InputAction @North => m_Wrapper.m_Buttons_North;
        public InputAction @West => m_Wrapper.m_Buttons_West;
        public InputAction @East => m_Wrapper.m_Buttons_East;
        public InputAction @South => m_Wrapper.m_Buttons_South;
        public InputAction @R1 => m_Wrapper.m_Buttons_R1;
        public InputAction @R2 => m_Wrapper.m_Buttons_R2;
        public InputAction @L1 => m_Wrapper.m_Buttons_L1;
        public InputAction @L2 => m_Wrapper.m_Buttons_L2;
        public InputAction @Option => m_Wrapper.m_Buttons_Option;
        public InputAction @Select => m_Wrapper.m_Buttons_Select;
        public InputAction @Up => m_Wrapper.m_Buttons_Up;
        public InputAction @Down => m_Wrapper.m_Buttons_Down;
        public InputAction @Left => m_Wrapper.m_Buttons_Left;
        public InputAction @Right => m_Wrapper.m_Buttons_Right;
        public InputActionMap Get() { return m_Wrapper.m_Buttons; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ButtonsActions set) { return set.Get(); }
        public void AddCallbacks(IButtonsActions instance)
        {
            if (instance == null || m_Wrapper.m_ButtonsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ButtonsActionsCallbackInterfaces.Add(instance);
            @North.started += instance.OnNorth;
            @North.performed += instance.OnNorth;
            @North.canceled += instance.OnNorth;
            @West.started += instance.OnWest;
            @West.performed += instance.OnWest;
            @West.canceled += instance.OnWest;
            @East.started += instance.OnEast;
            @East.performed += instance.OnEast;
            @East.canceled += instance.OnEast;
            @South.started += instance.OnSouth;
            @South.performed += instance.OnSouth;
            @South.canceled += instance.OnSouth;
            @R1.started += instance.OnR1;
            @R1.performed += instance.OnR1;
            @R1.canceled += instance.OnR1;
            @R2.started += instance.OnR2;
            @R2.performed += instance.OnR2;
            @R2.canceled += instance.OnR2;
            @L1.started += instance.OnL1;
            @L1.performed += instance.OnL1;
            @L1.canceled += instance.OnL1;
            @L2.started += instance.OnL2;
            @L2.performed += instance.OnL2;
            @L2.canceled += instance.OnL2;
            @Option.started += instance.OnOption;
            @Option.performed += instance.OnOption;
            @Option.canceled += instance.OnOption;
            @Select.started += instance.OnSelect;
            @Select.performed += instance.OnSelect;
            @Select.canceled += instance.OnSelect;
            @Up.started += instance.OnUp;
            @Up.performed += instance.OnUp;
            @Up.canceled += instance.OnUp;
            @Down.started += instance.OnDown;
            @Down.performed += instance.OnDown;
            @Down.canceled += instance.OnDown;
            @Left.started += instance.OnLeft;
            @Left.performed += instance.OnLeft;
            @Left.canceled += instance.OnLeft;
            @Right.started += instance.OnRight;
            @Right.performed += instance.OnRight;
            @Right.canceled += instance.OnRight;
        }

        private void UnregisterCallbacks(IButtonsActions instance)
        {
            @North.started -= instance.OnNorth;
            @North.performed -= instance.OnNorth;
            @North.canceled -= instance.OnNorth;
            @West.started -= instance.OnWest;
            @West.performed -= instance.OnWest;
            @West.canceled -= instance.OnWest;
            @East.started -= instance.OnEast;
            @East.performed -= instance.OnEast;
            @East.canceled -= instance.OnEast;
            @South.started -= instance.OnSouth;
            @South.performed -= instance.OnSouth;
            @South.canceled -= instance.OnSouth;
            @R1.started -= instance.OnR1;
            @R1.performed -= instance.OnR1;
            @R1.canceled -= instance.OnR1;
            @R2.started -= instance.OnR2;
            @R2.performed -= instance.OnR2;
            @R2.canceled -= instance.OnR2;
            @L1.started -= instance.OnL1;
            @L1.performed -= instance.OnL1;
            @L1.canceled -= instance.OnL1;
            @L2.started -= instance.OnL2;
            @L2.performed -= instance.OnL2;
            @L2.canceled -= instance.OnL2;
            @Option.started -= instance.OnOption;
            @Option.performed -= instance.OnOption;
            @Option.canceled -= instance.OnOption;
            @Select.started -= instance.OnSelect;
            @Select.performed -= instance.OnSelect;
            @Select.canceled -= instance.OnSelect;
            @Up.started -= instance.OnUp;
            @Up.performed -= instance.OnUp;
            @Up.canceled -= instance.OnUp;
            @Down.started -= instance.OnDown;
            @Down.performed -= instance.OnDown;
            @Down.canceled -= instance.OnDown;
            @Left.started -= instance.OnLeft;
            @Left.performed -= instance.OnLeft;
            @Left.canceled -= instance.OnLeft;
            @Right.started -= instance.OnRight;
            @Right.performed -= instance.OnRight;
            @Right.canceled -= instance.OnRight;
        }

        public void RemoveCallbacks(IButtonsActions instance)
        {
            if (m_Wrapper.m_ButtonsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IButtonsActions instance)
        {
            foreach (var item in m_Wrapper.m_ButtonsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ButtonsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ButtonsActions @Buttons => new ButtonsActions(this);

    // Sticks
    private readonly InputActionMap m_Sticks;
    private List<ISticksActions> m_SticksActionsCallbackInterfaces = new List<ISticksActions>();
    private readonly InputAction m_Sticks_LStick;
    private readonly InputAction m_Sticks_RStick;
    public struct SticksActions
    {
        private @Controller m_Wrapper;
        public SticksActions(@Controller wrapper) { m_Wrapper = wrapper; }
        public InputAction @LStick => m_Wrapper.m_Sticks_LStick;
        public InputAction @RStick => m_Wrapper.m_Sticks_RStick;
        public InputActionMap Get() { return m_Wrapper.m_Sticks; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SticksActions set) { return set.Get(); }
        public void AddCallbacks(ISticksActions instance)
        {
            if (instance == null || m_Wrapper.m_SticksActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_SticksActionsCallbackInterfaces.Add(instance);
            @LStick.started += instance.OnLStick;
            @LStick.performed += instance.OnLStick;
            @LStick.canceled += instance.OnLStick;
            @RStick.started += instance.OnRStick;
            @RStick.performed += instance.OnRStick;
            @RStick.canceled += instance.OnRStick;
        }

        private void UnregisterCallbacks(ISticksActions instance)
        {
            @LStick.started -= instance.OnLStick;
            @LStick.performed -= instance.OnLStick;
            @LStick.canceled -= instance.OnLStick;
            @RStick.started -= instance.OnRStick;
            @RStick.performed -= instance.OnRStick;
            @RStick.canceled -= instance.OnRStick;
        }

        public void RemoveCallbacks(ISticksActions instance)
        {
            if (m_Wrapper.m_SticksActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ISticksActions instance)
        {
            foreach (var item in m_Wrapper.m_SticksActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_SticksActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public SticksActions @Sticks => new SticksActions(this);
    public interface IButtonsActions
    {
        void OnNorth(InputAction.CallbackContext context);
        void OnWest(InputAction.CallbackContext context);
        void OnEast(InputAction.CallbackContext context);
        void OnSouth(InputAction.CallbackContext context);
        void OnR1(InputAction.CallbackContext context);
        void OnR2(InputAction.CallbackContext context);
        void OnL1(InputAction.CallbackContext context);
        void OnL2(InputAction.CallbackContext context);
        void OnOption(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnUp(InputAction.CallbackContext context);
        void OnDown(InputAction.CallbackContext context);
        void OnLeft(InputAction.CallbackContext context);
        void OnRight(InputAction.CallbackContext context);
    }
    public interface ISticksActions
    {
        void OnLStick(InputAction.CallbackContext context);
        void OnRStick(InputAction.CallbackContext context);
    }
}
